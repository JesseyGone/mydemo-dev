<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
          http://www.springframework.org/schema/context 
          http://www.springframework.org/schema/context/spring-context-4.0.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-4.1.xsd">

	<context:annotation-config />
	<context:component-scan base-package="**.*.service" />

	<security:http use-expressions="true">
		<!-- 访问权限 -->
		<security:intercept-url pattern="/login*"
			access="permitAll" />
		<security:intercept-url pattern="/register*"
			access="permitAll" />
		<security:intercept-url pattern="/resources/**"
			access="permitAll" />
		<security:intercept-url pattern="/**" access="permitAll" />
		<!-- <security:intercept-url pattern="/**" -->
		<!-- access="isAuthenticated()" /> -->
		<!-- 访问权限 end 注:登录成功即可访问/**,因为后续还会有权限控制 -->

		<security:form-login login-page="/login.html" />
		<!-- 把 usernamePasswordAuthenticationFilter 加入 FilterChain -->
		<security:custom-filter ref="usernamePasswordAuthenticationFilter"
			before="FORM_LOGIN_FILTER" />
		<!-- Remember Me -->
		<security:custom-filter ref="rememberMeFilter"
			position="REMEMBER_ME_FILTER" />
		<!-- 登出 -->
		<security:logout logout-url="/logout"
			logout-success-url="/login" invalidate-session="true" delete-cookies="JSESSIONID" />

		<!-- 访问拒绝处理 -->
		<security:access-denied-handler ref="accessDeniedHandler" />

		<!-- 单点登录 -->
		<security:session-management>
			<security:concurrency-control
				max-sessions="1" error-if-maximum-exceeded="true" />
		</security:session-management>

	</security:http>

	<!-- 启用注解控制权限 - 必须放在dispatcher-serlet.xml里面 -->
	<!-- <security:global-method-security pre-post-annotations="enabled" /> -->

	<bean id="accessDeniedHandler"
		class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
		<property name="errorPage" value="/denied.html" />
	</bean>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
			<security:password-encoder ref="passwordEncoder">
				<security:salt-source system-wide="hoshi" />
			</security:password-encoder>
		</security:authentication-provider>
		<security:authentication-provider
			ref="rememberMeAuthenticationProvider" />
	</security:authentication-manager>

	<!-- 自定义认证实现类 -->
	<bean id="customUserDetailsService" class="com.hand.demo.security.service.CustomUserDetailsService" />

	<!-- 加密 -->
	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />

	<!-- Filter FORM_LOGIN_FILTER -->
	<bean id="usernamePasswordAuthenticationFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<property name="rememberMeServices" ref="rememberMeServices" />
		<property name="authenticationManager" ref="authenticationManager" />
		<!-- 指定 request 中包含的用户名对应的参数名 -->
		<property name="usernameParameter" value="username" />
		<property name="passwordParameter" value="password" />
		<!-- 指定登录的提交地址 -->
		<property name="filterProcessesUrl" value="/login" />
		<property name="authenticationSuccessHandler" ref="authenticationSuccessHandler"></property>
		<property name="authenticationFailureHandler" ref="authenticationFailureHandler"></property>
	</bean>

	<!-- Filter REMEMBER_ME_FILTER -->
	<bean id="rememberMeFilter"
		class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<constructor-arg name="rememberMeServices" ref="rememberMeServices" />
		<constructor-arg name="authenticationManager" ref="authenticationManager" />
	</bean>

	<!-- 认证结果处理类 -->
	<bean id="authenticationSuccessHandler"
		class="com.hand.demo.security.service.AuthenticationSuccessHandlerImpl" />
	<bean id="authenticationFailureHandler"
		class="com.hand.demo.security.service.AuthenticationFailureHandlerImpl" />

	<!-- RememberMeServices 的实现 -->
	<bean id="rememberMeServices"
		class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
		<constructor-arg name="key" value="security-hoshi" />
		<constructor-arg name="userDetailsService" ref="customUserDetailsService" />
		<!-- 指定 PersistentTokenRepository -->
		<constructor-arg name="tokenRepository">
			<bean class="com.hand.demo.security.service.PersistentTokenRepositoryImpl" />
		</constructor-arg>
		<!-- 指定 request 中包含的用户是否选择了记住我的参数名 -->
		<property name="cookieName" value="HOSHI_RMMBRM" />
		<property name="parameter" value="rmmbrm-hoshi" />
		<property name="tokenValiditySeconds" value="3600" />
	</bean>

	<!-- key 值需与对应的 RememberMeServices 保持一致 -->
	<bean id="rememberMeAuthenticationProvider"
		class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<constructor-arg name="key" value="security-hoshi" />
	</bean>

</beans>