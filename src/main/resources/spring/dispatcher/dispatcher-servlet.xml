<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
		http://www.springframework.org/schema/security 
        http://www.springframework.org/schema/security/spring-security-4.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- 添加MVC驱动、注解检测、视图解析 -->

	<!-- 前后台传值自动装配对象的convertor -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 返回页面 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<!-- 返回json数据 -->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper" />
				</property>
				<property name="supportedMediaTypes">
					<list>
						<value>application/json</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<mvc:resources mapping="/lib/**" location="/lib/" />
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/img/**" location="/img/" />
	<mvc:resources mapping="/fonts/**" location="/fonts/" />
	<mvc:view-controller path="/login.html" view-name="/login" />
	<mvc:view-controller path="/index" view-name="redirect:/index.html" />
	<mvc:view-controller path="/" view-name="redirect:/index.html" />

	<!-- freemaker配置 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPaths">
			<list>
				<value>/WEB-INF/view</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8" />
		<property name="freemarkerSettings">
			<props>
				<!-- <prop key="auto_import">spring.ftl as spring</prop> -->
				<prop key="template_update_delay">2</prop><!-- 模板更新检查时间(秒) -->
				<prop key="number_format">#</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<!-- <prop key="classic_compatible">true</prop> -->
			</props>
		</property>
	</bean>

	<!-- 针对freemarker的视图配置 -->
	<!-- 注意，视图配置里不能配置prefix，因为FreeMarker本身配置了templateLoaderPath，必须在这里配置 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="cache" value="false" />
		<property name="suffix" value=".html" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="requestContextAttribute" value="request" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="allowSessionOverride" value="true" />
		<property name="allowRequestOverride" value="true" />
	</bean>

	<!-- 开启自动扫描功能 - 开启注解配置 即Autowried -->
	<context:annotation-config />
	<context:component-scan base-package="**.*.service" />
	<context:component-scan base-package="**.*.controllers" />
	<!-- **表示匹配任意目录结构 -->

	<!-- 启用注解控制权限 -->
	<security:global-method-security
		secured-annotations="enabled" pre-post-annotations="enabled" />
	
	<!-- redis配置注入spring -->
	<context:component-scan base-package="com.hand.config.cache.redis" />

</beans>
